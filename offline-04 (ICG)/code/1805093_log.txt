Line 1: type_specifier : INT

int

Line 1: declaration_list : ID

b

Line 1: var_declaration : type_specifier declaration_list SEMICOLON

int b;

Line 1: unit : var_declaration

int b;


Line 1: program : unit

int b;


Line 3: type_specifier : INT

int

Line 4: type_specifier : INT

int

Line 4: declaration_list : ID

a

Line 4: declaration_list : declaration_list COMMA ID

a,b

Line 4: declaration_list : declaration_list COMMA ID LTHIRD CONST_INT RTHIRD

a,b,c[3]

Line 4: var_declaration : type_specifier declaration_list SEMICOLON

int a,b,c[3];

Line 4: statement : var_declaration

int a,b,c[3];


Line 4: statements : statement

int a,b,c[3];


Line 5: variable : ID

a

Line 5: factor : CONST_INT

1

Line 5: unary_expression : factor

1

Line 5: term : unary_expression

1

Line 5: factor : CONST_INT

2

Line 5: unary_expression : factor

2

Line 5: term : unary_expression

2

Line 5: simple_expression : term

2

Line 5: factor : CONST_INT

3

Line 5: unary_expression : factor

3

Line 5: term : unary_expression

3

Line 5: simple_expression : simple_expression ADDOP term

2+3

Line 5: rel_expression : simple_expression

2+3

Line 5: logic_expression : rel_expression

2+3

Line 5: expression : logic_expression

2+3

Line 5: factor : LPAREN expression RPAREN

(2+3)

Line 5: unary_expression : factor

(2+3)

Line 5: term : term MULOP unary_expression

1*(2+3)

Line 5: factor : CONST_INT

3

Line 5: unary_expression : factor

3

Line 5: term : term MULOP unary_expression

1*(2+3)%3

Line 5: simple_expression : term

1*(2+3)%3

Line 5: rel_expression : simple_expression

1*(2+3)%3

Line 5: logic_expression : rel_expression

1*(2+3)%3

Line 5: expression : variable ASSIGNOP logic_expression

a=1*(2+3)%3

Line 5: expression_statement : expression SEMICOLON

a=1*(2+3)%3;

Line 5: statement : expression_statement

a=1*(2+3)%3;


Line 5: statements : statements statement

int a,b,c[3];
a=1*(2+3)%3;


Line 7: variable : ID

b

Line 7: factor : CONST_INT

6

Line 7: unary_expression : factor

6

Line 7: term : unary_expression

6

Line 7: simple_expression : term

6

Line 7: rel_expression : simple_expression

6

Line 7: logic_expression : rel_expression

6

Line 7: expression : variable ASSIGNOP logic_expression

b=6

Line 7: expression_statement : expression SEMICOLON

b=6;

Line 7: statement : expression_statement

b=6;


Line 7: statements : statements statement

int a,b,c[3];
a=1*(2+3)%3;
b=6;


Line 13: statement : PRINTLN LPAREN ID RPAREN SEMICOLON

printf(a);


Line 13: statements : statements statement

int a,b,c[3];
a=1*(2+3)%3;
b=6;
printf(a);


Line 14: statement : PRINTLN LPAREN ID RPAREN SEMICOLON

printf(b);


Line 14: statements : statements statement

int a,b,c[3];
a=1*(2+3)%3;
b=6;
printf(a);
printf(b);


Line 15: compound_statement : LCURL statements RCURL

{
int a,b,c[3];
a=1*(2+3)%3;
b=6;
printf(a);
printf(b);
}




ScopeTable # 1.1
 7 --> < a , ID > 
 8 --> < b , ID > 
 9 --> < c , ID > 



ScopeTable # 1
 1 --> < main , ID > 
 8 --> < b , ID > 


Line 15: func_definition : type_specifier ID LPAREN RPAREN compound_statement

int main(){
int a,b,c[3];
a=1*(2+3)%3;
b=6;
printf(a);
printf(b);
}


Line 15: unit : func_definition

int main(){
int a,b,c[3];
a=1*(2+3)%3;
b=6;
printf(a);
printf(b);
}



Line 15: program : program unit

int b;
int main(){
int a,b,c[3];
a=1*(2+3)%3;
b=6;
printf(a);
printf(b);
}



Line 16: start : program





ScopeTable # 1
 1 --> < main , ID > 
 8 --> < b , ID > 


Total lines: 16
Total errors: 0
