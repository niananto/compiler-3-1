Line 1: type_specifier : INT

int

Line 2: factor : CONST_INT

1

Line 2: unary_expression : factor

1

Line 2: term : unary_expression

1

Line 2: simple_expression : term

1

Line 2: rel_expression : simple_expression

1

Line 2: logic_expression : rel_expression

1

Line 2: expression : logic_expression

1

Error at line 2: Undeclared array a

Line 2: variable : ID LTHIRD expression RTHIRD

a[1]

Error at line 2: Undeclared variable i

Line 2: variable : ID

i

Line 2: factor : variable

i

Line 2: unary_expression : factor

i

Line 2: term : unary_expression

i

Line 2: factor : CONST_INT

1

Line 2: unary_expression : factor

1

Line 2: term : unary_expression

1

Line 2: factor : CONST_INT

2

Line 2: unary_expression : factor

2

Line 2: term : term MULOP unary_expression

1*2

Line 2: simple_expression : term

1*2

Line 2: rel_expression : simple_expression

1*2

Line 2: logic_expression : rel_expression

1*2

Line 2: expression : logic_expression

1*2

Error at line 2: Undeclared array a

Line 2: variable : ID LTHIRD expression RTHIRD

a[1*2]

Line 2: factor : variable

a[1*2]

Line 2: unary_expression : factor

a[1*2]

Line 2: term : term MULOP unary_expression

i*a[1*2]

Line 2: simple_expression : term

i*a[1*2]

Line 2: rel_expression : simple_expression

i*a[1*2]

Line 2: logic_expression : rel_expression

i*a[1*2]

Line 2: expression : variable ASSIGNOP logic_expression

a[1]=i*a[1*2]

Line 2: expression_statement : expression SEMICOLON

a[1]=i*a[1*2];

Line 2: statement : expression_statement

a[1]=i*a[1*2];


Line 2: statements : statement

a[1]=i*a[1*2];


Error at line 3: Undeclared variable i

Line 3: variable : ID

i

Line 3: factor : variable

i

Line 3: unary_expression : factor

i

Line 3: term : unary_expression

i

Line 3: simple_expression : term

i

Line 3: factor : CONST_INT

2

Line 3: unary_expression : factor

2

Line 3: term : unary_expression

2

Line 3: simple_expression : term

2

Line 3: rel_expression : simple_expression RELOP simple_expression

i<2

Line 3: logic_expression : rel_expression

i<2

Line 3: expression : logic_expression

i<2

Line 4: factor : CONST_INT

2

Line 4: unary_expression : factor

2

Line 4: term : unary_expression

2

Line 4: simple_expression : term

2

Line 4: rel_expression : simple_expression

2

Line 4: logic_expression : rel_expression

2

Line 4: expression : logic_expression

2

Error at line 4: Undeclared array a

Line 4: variable : ID LTHIRD expression RTHIRD

a[2]

Line 4: factor : CONST_INT

5

Line 4: unary_expression : factor

5

Line 4: term : unary_expression

5

Line 4: simple_expression : term

5

Line 4: rel_expression : simple_expression

5

Line 4: logic_expression : rel_expression

5

Line 4: expression : variable ASSIGNOP logic_expression

a[2]=5

Line 4: expression_statement : expression SEMICOLON

a[2]=5;

Line 4: statement : expression_statement

a[2]=5;


Line 4: statements : statement

a[2]=5;


Line 5: compound_statement : LCURL statements RCURL

{
a[2]=5;
}




ScopeTable # 1.1.1



ScopeTable # 1.1



ScopeTable # 1
 1 --> < main , ID > 


Line 5: statement : compound_statement

{
a[2]=5;
}


Line 6: statement : IF LPAREN expression RPAREN statement

if (i<2){
a[2]=5;
}


Line 6: statements : statements statement

a[1]=i*a[1*2];
if (i<2){
a[2]=5;
}


Line 6: compound_statement : LCURL statements RCURL

{
a[1]=i*a[1*2];
if (i<2){
a[2]=5;
}
}




ScopeTable # 1.1



ScopeTable # 1
 1 --> < main , ID > 


Line 6: func_definition : type_specifier ID LPAREN RPAREN compound_statement

int main(){
a[1]=i*a[1*2];
if (i<2){
a[2]=5;
}
}


Line 6: unit : func_definition

int main(){
a[1]=i*a[1*2];
if (i<2){
a[2]=5;
}
}



Line 6: program : unit

int main(){
a[1]=i*a[1*2];
if (i<2){
a[2]=5;
}
}



Line 7: start : program





ScopeTable # 1
 1 --> < main , ID > 


Total lines: 7
Total errors: 5
